{"version":3,"file":"index.mjs","sources":["../lib/round10.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport isInfinite from '@stdlib/math-base-assert-is-infinite' ;\nimport pow from '@stdlib/math-base-special-pow' ;\nimport floor from '@stdlib/math-base-special-floor' ;\nimport ceil from '@stdlib/math-base-special-ceil' ;\nimport log10 from '@stdlib/math-base-special-log10' ;\nimport MAX_EXP from '@stdlib/constants-float64-max-base10-exponent' ;\nimport MIN_EXP_SUBNORMAL from '@stdlib/constants-float64-min-base10-exponent-subnormal' ;\n\n\n// VARIABLES //\n\n// 10^308:\nvar HUGE = 1.0e308;\n\n// 10^-323\nvar TINY = 1.0e-323;\n\n\n// MAIN //\n\n/**\n* Rounds a numeric value to the nearest power of `10` on a linear scale.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = round10( 3.141592653589793 );\n* // returns 1.0\n*\n* @example\n* var v = round10( 13.0 );\n* // returns 10.0\n*\n* @example\n* var v = round10( -0.314 );\n* // returns -0.1\n*/\nfunction round10( x ) {\n\tvar sign;\n\tvar half;\n\tvar p1;\n\tvar p2;\n\tvar y1;\n\tvar y2;\n\tvar p;\n\tif (\n\t\tisnan( x ) ||\n\t\tisInfinite( x ) ||\n\t\tx === 0.0\n\t) {\n\t\treturn x;\n\t}\n\tif ( x < 0 ) {\n\t\tx = -x;\n\t\tsign = -1.0;\n\t} else {\n\t\tsign = 1.0;\n\t}\n\t// Solve the equation `10^p = x` for `p`:\n\tp = log10( x );\n\n\t// Find the previous and next integer powers:\n\tp1 = floor( p );\n\tp2 = ceil( p );\n\n\t// Handle tiny:\n\tif ( p1 === MIN_EXP_SUBNORMAL ) {\n\t\treturn sign * TINY;\n\t}\n\t// Handle huge:\n\tif ( p1 === MAX_EXP ) {\n\t\treturn sign * HUGE;\n\t}\n\t// Compute previous and next powers of 10:\n\ty1 = pow( 10.0, p1 );\n\ty2 = pow( 10.0, p2 );\n\n\t// Find the closest power of 10:\n\thalf = ( y2 - y1 ) / 2.0;\n\tif ( y1+half > x ) {\n\t\treturn sign * y1;\n\t}\n\treturn sign * y2;\n}\n\n\n// EXPORTS //\n\nexport default round10;\n"],"names":["round10","x","sign","p1","p2","y1","y2","p","isnan","isInfinite","log10","floor","ceil","MIN_EXP_SUBNORMAL","MAX_EXP","pow"],"mappings":";;gwBA6DA,SAASA,EAASC,GACjB,IAAIC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACJ,OACCC,EAAOP,IACPQ,EAAYR,IACN,IAANA,EAEOA,GAEHA,EAAI,GACRA,GAAKA,EACLC,GAAQ,GAERA,EAAO,EAGRK,EAAIG,EAAOT,GAGXE,EAAKQ,EAAOJ,GACZH,EAAKQ,EAAML,GAGNJ,IAAOU,EApDF,OAqDFX,EAGHC,IAAOW,EA3DF,MA4DFZ,GAGRG,EAAKU,EAAK,GAAMZ,MAChBG,EAAKS,EAAK,GAAMX,IAGFC,GAAO,EACNJ,EACPC,EAAOG,EAERH,EAAOI"}